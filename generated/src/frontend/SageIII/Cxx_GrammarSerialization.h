// Declarations and templates for supporting boost::serialization of Sage IR nodes.
#ifndef ROSE_Cxx_GrammarSerialization_H
#define ROSE_Cxx_GrammarSerialization_H

#include <featureTests.h>
#ifdef ROSE_ENABLE_BOOST_SERIALIZATION
#include <RoseFirst.h>
#include <Cxx_GrammarDeclarations.h>

// sage3basic.h or rose.h must be inlucded first from a .C file (don't do it here!)
#include <boost/serialization/export.hpp>

// The declaration half of exporting polymorphic classes.
BOOST_CLASS_EXPORT_KEY(SgJvmComposite);
BOOST_CLASS_EXPORT_KEY(SgBinaryComposite);
BOOST_CLASS_EXPORT_KEY(SgFile);
BOOST_CLASS_EXPORT_KEY(SgSupport);
BOOST_CLASS_EXPORT_KEY(SgAsmX86Instruction);
BOOST_CLASS_EXPORT_KEY(SgAsmVoidType);
BOOST_CLASS_EXPORT_KEY(SgAsmVectorType);
BOOST_CLASS_EXPORT_KEY(SgAsmUserInstruction);
BOOST_CLASS_EXPORT_KEY(SgAsmUnaryUnsignedExtend);
BOOST_CLASS_EXPORT_KEY(SgAsmUnaryTruncate);
BOOST_CLASS_EXPORT_KEY(SgAsmUnarySignedExtend);
BOOST_CLASS_EXPORT_KEY(SgAsmUnaryRrx);
BOOST_CLASS_EXPORT_KEY(SgAsmUnaryPlus);
BOOST_CLASS_EXPORT_KEY(SgAsmUnaryMinus);
BOOST_CLASS_EXPORT_KEY(SgAsmUnaryExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmSynthesizedFieldDeclaration);
BOOST_CLASS_EXPORT_KEY(SgAsmSynthesizedDataStructureDeclaration);
BOOST_CLASS_EXPORT_KEY(SgAsmStringStorage);
BOOST_CLASS_EXPORT_KEY(SgAsmStoredString);
BOOST_CLASS_EXPORT_KEY(SgAsmStaticData);
BOOST_CLASS_EXPORT_KEY(SgAsmStackExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmRiscOperation);
BOOST_CLASS_EXPORT_KEY(SgAsmRegisterNames);
BOOST_CLASS_EXPORT_KEY(SgAsmPowerpcInstruction);
BOOST_CLASS_EXPORT_KEY(SgAsmPointerType);
BOOST_CLASS_EXPORT_KEY(SgAsmPEStringSection);
BOOST_CLASS_EXPORT_KEY(SgAsmPESectionTable);
BOOST_CLASS_EXPORT_KEY(SgAsmPESectionTableEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmPERVASizePairList);
BOOST_CLASS_EXPORT_KEY(SgAsmPERVASizePair);
BOOST_CLASS_EXPORT_KEY(SgAsmPEImportSection);
BOOST_CLASS_EXPORT_KEY(SgAsmPEImportItemList);
BOOST_CLASS_EXPORT_KEY(SgAsmPEImportItem);
BOOST_CLASS_EXPORT_KEY(SgAsmPEImportDirectoryList);
BOOST_CLASS_EXPORT_KEY(SgAsmPEImportDirectory);
BOOST_CLASS_EXPORT_KEY(SgAsmPEFileHeader);
BOOST_CLASS_EXPORT_KEY(SgAsmPEExportSection);
BOOST_CLASS_EXPORT_KEY(SgAsmPESection);
BOOST_CLASS_EXPORT_KEY(SgAsmPEExportEntryList);
BOOST_CLASS_EXPORT_KEY(SgAsmPEExportEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmPEExportDirectory);
BOOST_CLASS_EXPORT_KEY(SgAsmOperandList);
BOOST_CLASS_EXPORT_KEY(SgAsmNullInstruction);
BOOST_CLASS_EXPORT_KEY(SgAsmNEStringTable);
BOOST_CLASS_EXPORT_KEY(SgAsmNESectionTable);
BOOST_CLASS_EXPORT_KEY(SgAsmNESectionTableEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmNESection);
BOOST_CLASS_EXPORT_KEY(SgAsmNERelocTable);
BOOST_CLASS_EXPORT_KEY(SgAsmNERelocEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmNENameTable);
BOOST_CLASS_EXPORT_KEY(SgAsmNEModuleTable);
BOOST_CLASS_EXPORT_KEY(SgAsmNEFileHeader);
BOOST_CLASS_EXPORT_KEY(SgAsmNEEntryTable);
BOOST_CLASS_EXPORT_KEY(SgAsmNEEntryPoint);
BOOST_CLASS_EXPORT_KEY(SgAsmMipsInstruction);
BOOST_CLASS_EXPORT_KEY(SgAsmMemoryReferenceExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmM68kInstruction);
BOOST_CLASS_EXPORT_KEY(SgAsmLESectionTable);
BOOST_CLASS_EXPORT_KEY(SgAsmLESectionTableEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmLESection);
BOOST_CLASS_EXPORT_KEY(SgAsmLERelocTable);
BOOST_CLASS_EXPORT_KEY(SgAsmLEPageTable);
BOOST_CLASS_EXPORT_KEY(SgAsmLEPageTableEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmLENameTable);
BOOST_CLASS_EXPORT_KEY(SgAsmLEFileHeader);
BOOST_CLASS_EXPORT_KEY(SgAsmLEEntryTable);
BOOST_CLASS_EXPORT_KEY(SgAsmLEEntryPoint);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmSynthetic);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmStackMapVerificationType);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmStackMapTable);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmStackMapFrame);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmSourceFile);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmSignature);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmNestMembers);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmNestHost);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmModuleMainClass);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmMethodTable);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmMethodParameters);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmMethodParametersEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmMethod);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmLocalVariableTypeTable);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmLocalVariableTypeEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmLocalVariableTable);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmLocalVariableEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmLineNumberTable);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmLineNumberEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmInstruction);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmInnerClasses);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmInnerClassesEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmFileHeader);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmFieldTable);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmField);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmExceptionTable);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmExceptions);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmExceptionHandler);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmEnclosingMethod);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmDeprecated);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmConstantValue);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmConstantPool);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmConstantPoolEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmCodeAttribute);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmClass);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmBootstrapMethods);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmBootstrapMethod);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmAttributeTable);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmAttribute);
BOOST_CLASS_EXPORT_KEY(SgAsmJvmNode);
BOOST_CLASS_EXPORT_KEY(SgAsmInterpretationList);
BOOST_CLASS_EXPORT_KEY(SgAsmInterpretation);
BOOST_CLASS_EXPORT_KEY(SgAsmIntegerValueExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmIntegerType);
BOOST_CLASS_EXPORT_KEY(SgAsmInstructionList);
BOOST_CLASS_EXPORT_KEY(SgAsmIndirectRegisterExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericSymbolList);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericSectionList);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericHeaderList);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericFormat);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericFileList);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericFile);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericDLLList);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericDLL);
BOOST_CLASS_EXPORT_KEY(SgAsmFunction);
BOOST_CLASS_EXPORT_KEY(SgAsmSynthesizedDeclaration);
BOOST_CLASS_EXPORT_KEY(SgAsmFloatValueExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmFloatType);
BOOST_CLASS_EXPORT_KEY(SgAsmScalarType);
BOOST_CLASS_EXPORT_KEY(SgAsmType);
BOOST_CLASS_EXPORT_KEY(SgAsmExprListExp);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverSection);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverNeededSection);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverNeededEntryList);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverNeededEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverNeededAuxList);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverNeededAux);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverEntryList);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverDefinedSection);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverDefinedEntryList);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverDefinedEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverDefinedAuxList);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymverDefinedAux);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymbolSection);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymbolList);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSymbol);
BOOST_CLASS_EXPORT_KEY(SgAsmElfStrtab);
BOOST_CLASS_EXPORT_KEY(SgAsmElfStringSection);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSegmentTable);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSegmentTableEntryList);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSegmentTableEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSectionTable);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSectionTableEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmElfRelocSection);
BOOST_CLASS_EXPORT_KEY(SgAsmElfRelocEntryList);
BOOST_CLASS_EXPORT_KEY(SgAsmElfRelocEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmElfNoteSection);
BOOST_CLASS_EXPORT_KEY(SgAsmElfNoteEntryList);
BOOST_CLASS_EXPORT_KEY(SgAsmElfNoteEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmElfFileHeader);
BOOST_CLASS_EXPORT_KEY(SgAsmElfEHFrameSection);
BOOST_CLASS_EXPORT_KEY(SgAsmElfEHFrameEntryFDList);
BOOST_CLASS_EXPORT_KEY(SgAsmElfEHFrameEntryFD);
BOOST_CLASS_EXPORT_KEY(SgAsmElfEHFrameEntryCIList);
BOOST_CLASS_EXPORT_KEY(SgAsmElfEHFrameEntryCI);
BOOST_CLASS_EXPORT_KEY(SgAsmElfDynamicSection);
BOOST_CLASS_EXPORT_KEY(SgAsmElfSection);
BOOST_CLASS_EXPORT_KEY(SgAsmElfDynamicEntryList);
BOOST_CLASS_EXPORT_KEY(SgAsmElfDynamicEntry);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfWithStmt);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfVolatileType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfVariantPart);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfVariant);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfVariable);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfUpcStrictType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfUpcSharedType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfUpcRelaxedType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfUnspecifiedType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfUnspecifiedParameters);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfUnknownConstruct);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfUnionType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfTypedef);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfTryBlock);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfThrownType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfTemplateValueParameter);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfTemplateTypeParameter);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfSubroutineType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfSubrangeType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfSubprogram);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfStructureType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfStringType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfSharedType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfSetType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfRestrictType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfReferenceType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfPtrToMemberType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfPointerType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfPartialUnit);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfPackedType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfNamespace);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfNamelistItem);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfNamelist);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfMutableType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfModule);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfMember);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfMacroList);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfMacro);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfLineList);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfLine);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfLexicalBlock);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfLabel);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfInterfaceType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfInlinedSubroutine);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfInheritance);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfImportedUnit);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfImportedModule);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfImportedDeclaration);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfFunctionTemplate);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfFriend);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfFormatLabel);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfFormalParameter);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfFileType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfEnumerator);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfEnumerationType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfEntryPoint);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfDwarfProcedure);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfConstType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfConstructList);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfConstant);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfCondition);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfCompilationUnitList);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfCompilationUnit);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfCommonInclusion);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfCommonBlock);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfClassType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfClassTemplate);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfCatchBlock);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfBaseType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfArrayType);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfAccessDeclaration);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfConstruct);
BOOST_CLASS_EXPORT_KEY(SgAsmDwarfInformation);
BOOST_CLASS_EXPORT_KEY(SgAsmDOSFileHeader);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericHeader);
BOOST_CLASS_EXPORT_KEY(SgAsmDOSExtendedHeader);
BOOST_CLASS_EXPORT_KEY(SgAsmDirectRegisterExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmRegisterReferenceExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmControlFlagsExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmConstantExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmValueExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmCommonSubExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmCoffSymbolTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCoffSymbolList);
BOOST_CLASS_EXPORT_KEY(SgAsmCoffSymbol);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericSymbol);
BOOST_CLASS_EXPORT_KEY(SgAsmCoffStrtab);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericStrtab);
BOOST_CLASS_EXPORT_KEY(SgAsmCliHeader);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericSection);
BOOST_CLASS_EXPORT_KEY(SgAsmCilUint8Heap);
BOOST_CLASS_EXPORT_KEY(SgAsmCilUint32Heap);
BOOST_CLASS_EXPORT_KEY(SgAsmCilTypeSpecTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilTypeSpec);
BOOST_CLASS_EXPORT_KEY(SgAsmCilTypeRefTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilTypeRef);
BOOST_CLASS_EXPORT_KEY(SgAsmCilTypeDefTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilTypeDef);
BOOST_CLASS_EXPORT_KEY(SgAsmCilStandAloneSigTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilStandAloneSig);
BOOST_CLASS_EXPORT_KEY(SgAsmCilPropertyTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilPropertyMapTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilPropertyMap);
BOOST_CLASS_EXPORT_KEY(SgAsmCilProperty);
BOOST_CLASS_EXPORT_KEY(SgAsmCilParamTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilParam);
BOOST_CLASS_EXPORT_KEY(SgAsmCilNestedClassTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilNestedClass);
BOOST_CLASS_EXPORT_KEY(SgAsmCilModuleTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilModuleRefTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilModuleRef);
BOOST_CLASS_EXPORT_KEY(SgAsmCilModule);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMethodSpecTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMethodSpec);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMethodSemanticsTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMethodSemantics);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMethodImplTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMethodImpl);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMethodDefTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMethodDef);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMethodData);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMetadataRoot);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMetadataHeap);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMemberRefTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMemberRef);
BOOST_CLASS_EXPORT_KEY(SgAsmCilManifestResourceTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilManifestResource);
BOOST_CLASS_EXPORT_KEY(SgAsmCilInterfaceImplTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilInterfaceImpl);
BOOST_CLASS_EXPORT_KEY(SgAsmCilInstruction);
BOOST_CLASS_EXPORT_KEY(SgAsmCilImplMapTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilImplMap);
BOOST_CLASS_EXPORT_KEY(SgAsmCilGenericParamTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilGenericParam);
BOOST_CLASS_EXPORT_KEY(SgAsmCilGenericParamConstraintTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilGenericParamConstraint);
BOOST_CLASS_EXPORT_KEY(SgAsmCilFileTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilFile);
BOOST_CLASS_EXPORT_KEY(SgAsmCilFieldTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilFieldRVATable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilFieldRVA);
BOOST_CLASS_EXPORT_KEY(SgAsmCilFieldMarshalTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilFieldMarshal);
BOOST_CLASS_EXPORT_KEY(SgAsmCilFieldLayoutTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilFieldLayout);
BOOST_CLASS_EXPORT_KEY(SgAsmCilField);
BOOST_CLASS_EXPORT_KEY(SgAsmCilExportedTypeTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilExportedType);
BOOST_CLASS_EXPORT_KEY(SgAsmCilExceptionData);
BOOST_CLASS_EXPORT_KEY(SgAsmCilEventTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilEventMapTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilEventMap);
BOOST_CLASS_EXPORT_KEY(SgAsmCilEvent);
BOOST_CLASS_EXPORT_KEY(SgAsmCilErrorHeap);
BOOST_CLASS_EXPORT_KEY(SgAsmCilDeclSecurityTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilDeclSecurity);
BOOST_CLASS_EXPORT_KEY(SgAsmCilDataStream);
BOOST_CLASS_EXPORT_KEY(SgAsmCilCustomAttributeTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilCustomAttribute);
BOOST_CLASS_EXPORT_KEY(SgAsmCilConstantTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilConstant);
BOOST_CLASS_EXPORT_KEY(SgAsmCilClassLayoutTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilClassLayout);
BOOST_CLASS_EXPORT_KEY(SgAsmCilAssemblyTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilAssemblyRefTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilAssemblyRefProcessorTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilAssemblyRefProcessor);
BOOST_CLASS_EXPORT_KEY(SgAsmCilAssemblyRefOSTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilAssemblyRefOS);
BOOST_CLASS_EXPORT_KEY(SgAsmCilAssemblyRef);
BOOST_CLASS_EXPORT_KEY(SgAsmCilAssemblyProcessorTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilAssemblyProcessor);
BOOST_CLASS_EXPORT_KEY(SgAsmCilAssemblyOSTable);
BOOST_CLASS_EXPORT_KEY(SgAsmCilAssemblyOS);
BOOST_CLASS_EXPORT_KEY(SgAsmCilAssembly);
BOOST_CLASS_EXPORT_KEY(SgAsmCilMetadata);
BOOST_CLASS_EXPORT_KEY(SgAsmCilNode);
BOOST_CLASS_EXPORT_KEY(SgAsmByteOrder);
BOOST_CLASS_EXPORT_KEY(SgAsmBlock);
BOOST_CLASS_EXPORT_KEY(SgAsmBinarySubtract);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryRor);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryPreupdate);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryPostupdate);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryMultiply);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryMsl);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryMod);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryLsr);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryLsl);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryDivide);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryConcat);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryAsr);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryAdd);
BOOST_CLASS_EXPORT_KEY(SgAsmBinaryExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmBasicString);
BOOST_CLASS_EXPORT_KEY(SgAsmGenericString);
BOOST_CLASS_EXPORT_KEY(SgAsmExecutableFileFormat);
BOOST_CLASS_EXPORT_KEY(SgAsmInstruction);
BOOST_CLASS_EXPORT_KEY(SgAsmStatement);
BOOST_CLASS_EXPORT_KEY(SgAsmAarch32Coprocessor);
BOOST_CLASS_EXPORT_KEY(SgAsmExpression);
BOOST_CLASS_EXPORT_KEY(SgAsmNode);


/** Register all Sage IR node types for serialization.
 *
 *  This function should be called before any Sage IR nodes are serialized or deserialized. It
 *  registers all SgNode subclasses that might be serialized through a base pointer. Note that
 *  registration is required but not sufficient for serialization: the "serialize" member
 *  function template must also be defined. */
template<class Archive>
void roseAstSerializationRegistration(Archive &archive) {
    archive.template register_type<SgJvmComposite>();
    archive.template register_type<SgBinaryComposite>();
    archive.template register_type<SgFile>();
    archive.template register_type<SgSupport>();
    archive.template register_type<SgAsmX86Instruction>();
    archive.template register_type<SgAsmVoidType>();
    archive.template register_type<SgAsmVectorType>();
    archive.template register_type<SgAsmUserInstruction>();
    archive.template register_type<SgAsmUnaryUnsignedExtend>();
    archive.template register_type<SgAsmUnaryTruncate>();
    archive.template register_type<SgAsmUnarySignedExtend>();
    archive.template register_type<SgAsmUnaryRrx>();
    archive.template register_type<SgAsmUnaryPlus>();
    archive.template register_type<SgAsmUnaryMinus>();
    archive.template register_type<SgAsmUnaryExpression>();
    archive.template register_type<SgAsmSynthesizedFieldDeclaration>();
    archive.template register_type<SgAsmSynthesizedDataStructureDeclaration>();
    archive.template register_type<SgAsmStringStorage>();
    archive.template register_type<SgAsmStoredString>();
    archive.template register_type<SgAsmStaticData>();
    archive.template register_type<SgAsmStackExpression>();
    archive.template register_type<SgAsmRiscOperation>();
    archive.template register_type<SgAsmRegisterNames>();
    archive.template register_type<SgAsmPowerpcInstruction>();
    archive.template register_type<SgAsmPointerType>();
    archive.template register_type<SgAsmPEStringSection>();
    archive.template register_type<SgAsmPESectionTable>();
    archive.template register_type<SgAsmPESectionTableEntry>();
    archive.template register_type<SgAsmPERVASizePairList>();
    archive.template register_type<SgAsmPERVASizePair>();
    archive.template register_type<SgAsmPEImportSection>();
    archive.template register_type<SgAsmPEImportItemList>();
    archive.template register_type<SgAsmPEImportItem>();
    archive.template register_type<SgAsmPEImportDirectoryList>();
    archive.template register_type<SgAsmPEImportDirectory>();
    archive.template register_type<SgAsmPEFileHeader>();
    archive.template register_type<SgAsmPEExportSection>();
    archive.template register_type<SgAsmPESection>();
    archive.template register_type<SgAsmPEExportEntryList>();
    archive.template register_type<SgAsmPEExportEntry>();
    archive.template register_type<SgAsmPEExportDirectory>();
    archive.template register_type<SgAsmOperandList>();
    archive.template register_type<SgAsmNullInstruction>();
    archive.template register_type<SgAsmNEStringTable>();
    archive.template register_type<SgAsmNESectionTable>();
    archive.template register_type<SgAsmNESectionTableEntry>();
    archive.template register_type<SgAsmNESection>();
    archive.template register_type<SgAsmNERelocTable>();
    archive.template register_type<SgAsmNERelocEntry>();
    archive.template register_type<SgAsmNENameTable>();
    archive.template register_type<SgAsmNEModuleTable>();
    archive.template register_type<SgAsmNEFileHeader>();
    archive.template register_type<SgAsmNEEntryTable>();
    archive.template register_type<SgAsmNEEntryPoint>();
    archive.template register_type<SgAsmMipsInstruction>();
    archive.template register_type<SgAsmMemoryReferenceExpression>();
    archive.template register_type<SgAsmM68kInstruction>();
    archive.template register_type<SgAsmLESectionTable>();
    archive.template register_type<SgAsmLESectionTableEntry>();
    archive.template register_type<SgAsmLESection>();
    archive.template register_type<SgAsmLERelocTable>();
    archive.template register_type<SgAsmLEPageTable>();
    archive.template register_type<SgAsmLEPageTableEntry>();
    archive.template register_type<SgAsmLENameTable>();
    archive.template register_type<SgAsmLEFileHeader>();
    archive.template register_type<SgAsmLEEntryTable>();
    archive.template register_type<SgAsmLEEntryPoint>();
    archive.template register_type<SgAsmJvmSynthetic>();
    archive.template register_type<SgAsmJvmStackMapVerificationType>();
    archive.template register_type<SgAsmJvmStackMapTable>();
    archive.template register_type<SgAsmJvmStackMapFrame>();
    archive.template register_type<SgAsmJvmSourceFile>();
    archive.template register_type<SgAsmJvmSignature>();
    archive.template register_type<SgAsmJvmNestMembers>();
    archive.template register_type<SgAsmJvmNestHost>();
    archive.template register_type<SgAsmJvmModuleMainClass>();
    archive.template register_type<SgAsmJvmMethodTable>();
    archive.template register_type<SgAsmJvmMethodParameters>();
    archive.template register_type<SgAsmJvmMethodParametersEntry>();
    archive.template register_type<SgAsmJvmMethod>();
    archive.template register_type<SgAsmJvmLocalVariableTypeTable>();
    archive.template register_type<SgAsmJvmLocalVariableTypeEntry>();
    archive.template register_type<SgAsmJvmLocalVariableTable>();
    archive.template register_type<SgAsmJvmLocalVariableEntry>();
    archive.template register_type<SgAsmJvmLineNumberTable>();
    archive.template register_type<SgAsmJvmLineNumberEntry>();
    archive.template register_type<SgAsmJvmInstruction>();
    archive.template register_type<SgAsmJvmInnerClasses>();
    archive.template register_type<SgAsmJvmInnerClassesEntry>();
    archive.template register_type<SgAsmJvmFileHeader>();
    archive.template register_type<SgAsmJvmFieldTable>();
    archive.template register_type<SgAsmJvmField>();
    archive.template register_type<SgAsmJvmExceptionTable>();
    archive.template register_type<SgAsmJvmExceptions>();
    archive.template register_type<SgAsmJvmExceptionHandler>();
    archive.template register_type<SgAsmJvmEnclosingMethod>();
    archive.template register_type<SgAsmJvmDeprecated>();
    archive.template register_type<SgAsmJvmConstantValue>();
    archive.template register_type<SgAsmJvmConstantPool>();
    archive.template register_type<SgAsmJvmConstantPoolEntry>();
    archive.template register_type<SgAsmJvmCodeAttribute>();
    archive.template register_type<SgAsmJvmClass>();
    archive.template register_type<SgAsmJvmBootstrapMethods>();
    archive.template register_type<SgAsmJvmBootstrapMethod>();
    archive.template register_type<SgAsmJvmAttributeTable>();
    archive.template register_type<SgAsmJvmAttribute>();
    archive.template register_type<SgAsmJvmNode>();
    archive.template register_type<SgAsmInterpretationList>();
    archive.template register_type<SgAsmInterpretation>();
    archive.template register_type<SgAsmIntegerValueExpression>();
    archive.template register_type<SgAsmIntegerType>();
    archive.template register_type<SgAsmInstructionList>();
    archive.template register_type<SgAsmIndirectRegisterExpression>();
    archive.template register_type<SgAsmGenericSymbolList>();
    archive.template register_type<SgAsmGenericSectionList>();
    archive.template register_type<SgAsmGenericHeaderList>();
    archive.template register_type<SgAsmGenericFormat>();
    archive.template register_type<SgAsmGenericFileList>();
    archive.template register_type<SgAsmGenericFile>();
    archive.template register_type<SgAsmGenericDLLList>();
    archive.template register_type<SgAsmGenericDLL>();
    archive.template register_type<SgAsmFunction>();
    archive.template register_type<SgAsmSynthesizedDeclaration>();
    archive.template register_type<SgAsmFloatValueExpression>();
    archive.template register_type<SgAsmFloatType>();
    archive.template register_type<SgAsmScalarType>();
    archive.template register_type<SgAsmType>();
    archive.template register_type<SgAsmExprListExp>();
    archive.template register_type<SgAsmElfSymverSection>();
    archive.template register_type<SgAsmElfSymverNeededSection>();
    archive.template register_type<SgAsmElfSymverNeededEntryList>();
    archive.template register_type<SgAsmElfSymverNeededEntry>();
    archive.template register_type<SgAsmElfSymverNeededAuxList>();
    archive.template register_type<SgAsmElfSymverNeededAux>();
    archive.template register_type<SgAsmElfSymverEntryList>();
    archive.template register_type<SgAsmElfSymverEntry>();
    archive.template register_type<SgAsmElfSymverDefinedSection>();
    archive.template register_type<SgAsmElfSymverDefinedEntryList>();
    archive.template register_type<SgAsmElfSymverDefinedEntry>();
    archive.template register_type<SgAsmElfSymverDefinedAuxList>();
    archive.template register_type<SgAsmElfSymverDefinedAux>();
    archive.template register_type<SgAsmElfSymbolSection>();
    archive.template register_type<SgAsmElfSymbolList>();
    archive.template register_type<SgAsmElfSymbol>();
    archive.template register_type<SgAsmElfStrtab>();
    archive.template register_type<SgAsmElfStringSection>();
    archive.template register_type<SgAsmElfSegmentTable>();
    archive.template register_type<SgAsmElfSegmentTableEntryList>();
    archive.template register_type<SgAsmElfSegmentTableEntry>();
    archive.template register_type<SgAsmElfSectionTable>();
    archive.template register_type<SgAsmElfSectionTableEntry>();
    archive.template register_type<SgAsmElfRelocSection>();
    archive.template register_type<SgAsmElfRelocEntryList>();
    archive.template register_type<SgAsmElfRelocEntry>();
    archive.template register_type<SgAsmElfNoteSection>();
    archive.template register_type<SgAsmElfNoteEntryList>();
    archive.template register_type<SgAsmElfNoteEntry>();
    archive.template register_type<SgAsmElfFileHeader>();
    archive.template register_type<SgAsmElfEHFrameSection>();
    archive.template register_type<SgAsmElfEHFrameEntryFDList>();
    archive.template register_type<SgAsmElfEHFrameEntryFD>();
    archive.template register_type<SgAsmElfEHFrameEntryCIList>();
    archive.template register_type<SgAsmElfEHFrameEntryCI>();
    archive.template register_type<SgAsmElfDynamicSection>();
    archive.template register_type<SgAsmElfSection>();
    archive.template register_type<SgAsmElfDynamicEntryList>();
    archive.template register_type<SgAsmElfDynamicEntry>();
    archive.template register_type<SgAsmDwarfWithStmt>();
    archive.template register_type<SgAsmDwarfVolatileType>();
    archive.template register_type<SgAsmDwarfVariantPart>();
    archive.template register_type<SgAsmDwarfVariant>();
    archive.template register_type<SgAsmDwarfVariable>();
    archive.template register_type<SgAsmDwarfUpcStrictType>();
    archive.template register_type<SgAsmDwarfUpcSharedType>();
    archive.template register_type<SgAsmDwarfUpcRelaxedType>();
    archive.template register_type<SgAsmDwarfUnspecifiedType>();
    archive.template register_type<SgAsmDwarfUnspecifiedParameters>();
    archive.template register_type<SgAsmDwarfUnknownConstruct>();
    archive.template register_type<SgAsmDwarfUnionType>();
    archive.template register_type<SgAsmDwarfTypedef>();
    archive.template register_type<SgAsmDwarfTryBlock>();
    archive.template register_type<SgAsmDwarfThrownType>();
    archive.template register_type<SgAsmDwarfTemplateValueParameter>();
    archive.template register_type<SgAsmDwarfTemplateTypeParameter>();
    archive.template register_type<SgAsmDwarfSubroutineType>();
    archive.template register_type<SgAsmDwarfSubrangeType>();
    archive.template register_type<SgAsmDwarfSubprogram>();
    archive.template register_type<SgAsmDwarfStructureType>();
    archive.template register_type<SgAsmDwarfStringType>();
    archive.template register_type<SgAsmDwarfSharedType>();
    archive.template register_type<SgAsmDwarfSetType>();
    archive.template register_type<SgAsmDwarfRestrictType>();
    archive.template register_type<SgAsmDwarfReferenceType>();
    archive.template register_type<SgAsmDwarfPtrToMemberType>();
    archive.template register_type<SgAsmDwarfPointerType>();
    archive.template register_type<SgAsmDwarfPartialUnit>();
    archive.template register_type<SgAsmDwarfPackedType>();
    archive.template register_type<SgAsmDwarfNamespace>();
    archive.template register_type<SgAsmDwarfNamelistItem>();
    archive.template register_type<SgAsmDwarfNamelist>();
    archive.template register_type<SgAsmDwarfMutableType>();
    archive.template register_type<SgAsmDwarfModule>();
    archive.template register_type<SgAsmDwarfMember>();
    archive.template register_type<SgAsmDwarfMacroList>();
    archive.template register_type<SgAsmDwarfMacro>();
    archive.template register_type<SgAsmDwarfLineList>();
    archive.template register_type<SgAsmDwarfLine>();
    archive.template register_type<SgAsmDwarfLexicalBlock>();
    archive.template register_type<SgAsmDwarfLabel>();
    archive.template register_type<SgAsmDwarfInterfaceType>();
    archive.template register_type<SgAsmDwarfInlinedSubroutine>();
    archive.template register_type<SgAsmDwarfInheritance>();
    archive.template register_type<SgAsmDwarfImportedUnit>();
    archive.template register_type<SgAsmDwarfImportedModule>();
    archive.template register_type<SgAsmDwarfImportedDeclaration>();
    archive.template register_type<SgAsmDwarfFunctionTemplate>();
    archive.template register_type<SgAsmDwarfFriend>();
    archive.template register_type<SgAsmDwarfFormatLabel>();
    archive.template register_type<SgAsmDwarfFormalParameter>();
    archive.template register_type<SgAsmDwarfFileType>();
    archive.template register_type<SgAsmDwarfEnumerator>();
    archive.template register_type<SgAsmDwarfEnumerationType>();
    archive.template register_type<SgAsmDwarfEntryPoint>();
    archive.template register_type<SgAsmDwarfDwarfProcedure>();
    archive.template register_type<SgAsmDwarfConstType>();
    archive.template register_type<SgAsmDwarfConstructList>();
    archive.template register_type<SgAsmDwarfConstant>();
    archive.template register_type<SgAsmDwarfCondition>();
    archive.template register_type<SgAsmDwarfCompilationUnitList>();
    archive.template register_type<SgAsmDwarfCompilationUnit>();
    archive.template register_type<SgAsmDwarfCommonInclusion>();
    archive.template register_type<SgAsmDwarfCommonBlock>();
    archive.template register_type<SgAsmDwarfClassType>();
    archive.template register_type<SgAsmDwarfClassTemplate>();
    archive.template register_type<SgAsmDwarfCatchBlock>();
    archive.template register_type<SgAsmDwarfBaseType>();
    archive.template register_type<SgAsmDwarfArrayType>();
    archive.template register_type<SgAsmDwarfAccessDeclaration>();
    archive.template register_type<SgAsmDwarfConstruct>();
    archive.template register_type<SgAsmDwarfInformation>();
    archive.template register_type<SgAsmDOSFileHeader>();
    archive.template register_type<SgAsmGenericHeader>();
    archive.template register_type<SgAsmDOSExtendedHeader>();
    archive.template register_type<SgAsmDirectRegisterExpression>();
    archive.template register_type<SgAsmRegisterReferenceExpression>();
    archive.template register_type<SgAsmControlFlagsExpression>();
    archive.template register_type<SgAsmConstantExpression>();
    archive.template register_type<SgAsmValueExpression>();
    archive.template register_type<SgAsmCommonSubExpression>();
    archive.template register_type<SgAsmCoffSymbolTable>();
    archive.template register_type<SgAsmCoffSymbolList>();
    archive.template register_type<SgAsmCoffSymbol>();
    archive.template register_type<SgAsmGenericSymbol>();
    archive.template register_type<SgAsmCoffStrtab>();
    archive.template register_type<SgAsmGenericStrtab>();
    archive.template register_type<SgAsmCliHeader>();
    archive.template register_type<SgAsmGenericSection>();
    archive.template register_type<SgAsmCilUint8Heap>();
    archive.template register_type<SgAsmCilUint32Heap>();
    archive.template register_type<SgAsmCilTypeSpecTable>();
    archive.template register_type<SgAsmCilTypeSpec>();
    archive.template register_type<SgAsmCilTypeRefTable>();
    archive.template register_type<SgAsmCilTypeRef>();
    archive.template register_type<SgAsmCilTypeDefTable>();
    archive.template register_type<SgAsmCilTypeDef>();
    archive.template register_type<SgAsmCilStandAloneSigTable>();
    archive.template register_type<SgAsmCilStandAloneSig>();
    archive.template register_type<SgAsmCilPropertyTable>();
    archive.template register_type<SgAsmCilPropertyMapTable>();
    archive.template register_type<SgAsmCilPropertyMap>();
    archive.template register_type<SgAsmCilProperty>();
    archive.template register_type<SgAsmCilParamTable>();
    archive.template register_type<SgAsmCilParam>();
    archive.template register_type<SgAsmCilNestedClassTable>();
    archive.template register_type<SgAsmCilNestedClass>();
    archive.template register_type<SgAsmCilModuleTable>();
    archive.template register_type<SgAsmCilModuleRefTable>();
    archive.template register_type<SgAsmCilModuleRef>();
    archive.template register_type<SgAsmCilModule>();
    archive.template register_type<SgAsmCilMethodSpecTable>();
    archive.template register_type<SgAsmCilMethodSpec>();
    archive.template register_type<SgAsmCilMethodSemanticsTable>();
    archive.template register_type<SgAsmCilMethodSemantics>();
    archive.template register_type<SgAsmCilMethodImplTable>();
    archive.template register_type<SgAsmCilMethodImpl>();
    archive.template register_type<SgAsmCilMethodDefTable>();
    archive.template register_type<SgAsmCilMethodDef>();
    archive.template register_type<SgAsmCilMethodData>();
    archive.template register_type<SgAsmCilMetadataRoot>();
    archive.template register_type<SgAsmCilMetadataHeap>();
    archive.template register_type<SgAsmCilMemberRefTable>();
    archive.template register_type<SgAsmCilMemberRef>();
    archive.template register_type<SgAsmCilManifestResourceTable>();
    archive.template register_type<SgAsmCilManifestResource>();
    archive.template register_type<SgAsmCilInterfaceImplTable>();
    archive.template register_type<SgAsmCilInterfaceImpl>();
    archive.template register_type<SgAsmCilInstruction>();
    archive.template register_type<SgAsmCilImplMapTable>();
    archive.template register_type<SgAsmCilImplMap>();
    archive.template register_type<SgAsmCilGenericParamTable>();
    archive.template register_type<SgAsmCilGenericParam>();
    archive.template register_type<SgAsmCilGenericParamConstraintTable>();
    archive.template register_type<SgAsmCilGenericParamConstraint>();
    archive.template register_type<SgAsmCilFileTable>();
    archive.template register_type<SgAsmCilFile>();
    archive.template register_type<SgAsmCilFieldTable>();
    archive.template register_type<SgAsmCilFieldRVATable>();
    archive.template register_type<SgAsmCilFieldRVA>();
    archive.template register_type<SgAsmCilFieldMarshalTable>();
    archive.template register_type<SgAsmCilFieldMarshal>();
    archive.template register_type<SgAsmCilFieldLayoutTable>();
    archive.template register_type<SgAsmCilFieldLayout>();
    archive.template register_type<SgAsmCilField>();
    archive.template register_type<SgAsmCilExportedTypeTable>();
    archive.template register_type<SgAsmCilExportedType>();
    archive.template register_type<SgAsmCilExceptionData>();
    archive.template register_type<SgAsmCilEventTable>();
    archive.template register_type<SgAsmCilEventMapTable>();
    archive.template register_type<SgAsmCilEventMap>();
    archive.template register_type<SgAsmCilEvent>();
    archive.template register_type<SgAsmCilErrorHeap>();
    archive.template register_type<SgAsmCilDeclSecurityTable>();
    archive.template register_type<SgAsmCilDeclSecurity>();
    archive.template register_type<SgAsmCilDataStream>();
    archive.template register_type<SgAsmCilCustomAttributeTable>();
    archive.template register_type<SgAsmCilCustomAttribute>();
    archive.template register_type<SgAsmCilConstantTable>();
    archive.template register_type<SgAsmCilConstant>();
    archive.template register_type<SgAsmCilClassLayoutTable>();
    archive.template register_type<SgAsmCilClassLayout>();
    archive.template register_type<SgAsmCilAssemblyTable>();
    archive.template register_type<SgAsmCilAssemblyRefTable>();
    archive.template register_type<SgAsmCilAssemblyRefProcessorTable>();
    archive.template register_type<SgAsmCilAssemblyRefProcessor>();
    archive.template register_type<SgAsmCilAssemblyRefOSTable>();
    archive.template register_type<SgAsmCilAssemblyRefOS>();
    archive.template register_type<SgAsmCilAssemblyRef>();
    archive.template register_type<SgAsmCilAssemblyProcessorTable>();
    archive.template register_type<SgAsmCilAssemblyProcessor>();
    archive.template register_type<SgAsmCilAssemblyOSTable>();
    archive.template register_type<SgAsmCilAssemblyOS>();
    archive.template register_type<SgAsmCilAssembly>();
    archive.template register_type<SgAsmCilMetadata>();
    archive.template register_type<SgAsmCilNode>();
    archive.template register_type<SgAsmByteOrder>();
    archive.template register_type<SgAsmBlock>();
    archive.template register_type<SgAsmBinarySubtract>();
    archive.template register_type<SgAsmBinaryRor>();
    archive.template register_type<SgAsmBinaryPreupdate>();
    archive.template register_type<SgAsmBinaryPostupdate>();
    archive.template register_type<SgAsmBinaryMultiply>();
    archive.template register_type<SgAsmBinaryMsl>();
    archive.template register_type<SgAsmBinaryMod>();
    archive.template register_type<SgAsmBinaryLsr>();
    archive.template register_type<SgAsmBinaryLsl>();
    archive.template register_type<SgAsmBinaryDivide>();
    archive.template register_type<SgAsmBinaryConcat>();
    archive.template register_type<SgAsmBinaryAsr>();
    archive.template register_type<SgAsmBinaryAdd>();
    archive.template register_type<SgAsmBinaryExpression>();
    archive.template register_type<SgAsmBasicString>();
    archive.template register_type<SgAsmGenericString>();
    archive.template register_type<SgAsmExecutableFileFormat>();
    archive.template register_type<SgAsmInstruction>();
    archive.template register_type<SgAsmStatement>();
    archive.template register_type<SgAsmAarch32Coprocessor>();
    archive.template register_type<SgAsmExpression>();
    archive.template register_type<SgAsmNode>();
}

#endif
#endif
